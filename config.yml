#
# This is the default config file. It allows all users to do anything,
# so don't use it on production systems.
#
# Look here for more config file examples:
# https://github.com/verdaccio/verdaccio/tree/master/conf
#

store:
  s3-storage:
    bucket: encoder-verdaccio
    # keyPrefix: some-prefix # optional, has the effect of nesting all files in a subdirectory
    region: eu-west-1 # optional, will use aws s3's default behavior if not specified
    # endpoint: https://{service}.{region}.amazonaws.com # optional, will use aws s3's default behavior if not specified
    # s3ForcePathStyle: false # optional, will use path style URLs for S3 objects
    accessKeyId: ACCESS_KEY_ID # optional, aws accessKeyId for private S3 bucket
    secretAccessKey: SECRET_ACCESS_KEY # optional, aws secretAccessKey for private S3 bucket

web:
  title: Encoder
  # comment out to disable gravatar support
  # gravatar: false
  # by default packages are ordercer ascendant (asc|desc)
  # sort_packages: asc

auth:
  htpasswd:
    file: ./htpasswd
    max_users: -1
    # Maximum amount of users allowed to register, defaults to "+inf".
    # You can set this to -1 to disable registration.
    # max_users: 1000

security:
  api:
    jwt:
      sign:
        expiresIn: 60d
        notBefore: 1
  web:
    sign:
      expiresIn: 7d
      notBefore: 1

# a list of other known repositories we can talk to
uplinks:
  npmjs:
    url: https://registry.npmjs.org/

packages:
  '@encoder/*':
    access: moewdao
    publish: moewdao
    unpublish: moewdao

  '@daoua/*':
    access: moewdao
    publish: moewdao
    unpublish: moewdao


  '**':
    # allow all users (including non-authenticated users) to read and
    # publish all packages
    #
    # you can specify usernames/groupnames (depending on your auth plugin)
    # and three keywords: "$all", "$anonymous", "$authenticated"
    access: $authenticated

    # allow all known users to publish/publish packages
    # (anyone can register by default, remember?)
    publish: $authenticated
    unpublish: $authenticated

    # if package is not available locally, proxy requests to 'npmjs' registry
    proxy: npmjs

# You can specify HTTP/1.1 server keep alive timeout in seconds for incomming connections.
# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.
# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enought.
server:
  keepAliveTimeout: 60

middlewares:
  audit:
    enabled: true

# log settings
logs:
  - { type: stdout, format: pretty, level: info }
  #- {type: file, path: verdaccio.log, level: info}

listen:
  - localhost:8080
